openapi: 3.1.0
info:
  title: Spring Boot 6 Web API
  description: |-
    This is a sample Spring Boot 6 Server based on the OpenAPI 3.1 specification.  
  contact:
    email: github@petmystone.com
  license:
    name: MIT
    url: https://opensource.org/license/mit
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Customer
    description: Customer operations
  - name: Product
    description: Product operations
  - name: Order
    description: Order operations
security:
  - basic_auth: []
paths:
  /v1/customers:
    get:
      tags:
        - Customer
      summary: List Customers
      description: Returns the list of Customers
      operationId: listCustomers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid Request
        '404':
          description: Customer not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/customers/{id}:
    get:
      tags:
        - Customer
      summary: Get Customer by ID
      description: Get Customer by ID
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          description: the ID of the Customer
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        '400':
          description: Invalid Request
        '404':
          description: Customer not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/products:
    get:
      tags:
        - Product
      summary: List Products
      description: Returns the list of Products
      operationId: listProducts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid Request
        '404':
          description: Product not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/products/{id}:
    get:
      tags:
        - Product
      summary: Get Product by ID
      description: Get Product by ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: the ID of the Product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '400':
          description: Invalid Request
        '404':
          description: Product not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/orders:
    get:
      tags:
        - Order
      summary: List Order
      description: Returns the list of Order
      operationId: listOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Request
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/orders/{id}:
    get:
      tags:
        - Order
      summary: Get Order by ID
      description: Get Order by ID
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: the ID of the Order
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        '400':
          description: Invalid Request
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of an Order
          readOnly: true
        customer:
          $ref: "#/components/schemas/OrderCustomer"
        orderStatus:
          type: string
        shipmentInfo:
          type: string
        orderLines:
          type: array
          description: the items on the Order
          items:
            $ref: "#/components/schemas/OrderLineItem"
        dateCreated:
          type: string
          format: date-time
          description: The creation date of the Product 
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          description: The update date of the Product 
          readOnly: true
    OrderCustomer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of a specific Customer
          readOnly: true
        name:
          $ref: "#/components/schemas/Name"
        shipToAddess:
          $ref: "#/components/schemas/Address"
        billToAddess:
          $ref: "#/components/schemas/Address"
        email:
          type: string
          description: Customer email address
          example: jpeterman@gmail.com
          minLength: 6
          maxLength: 255
        phone:
          type: string
          description: Customer phone
          example: 804-555-1212
          minLength: 7
          maxLength: 20
        selectedPaymentMethod:
          $ref: "#/components/schemas/PaymentMethod"             
    OrderLineItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of the Order Line
        product:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: UUID of the Product
            description:
              type: string
              description: the description of the Product
            price:
              type: number
              format: double
              example: 12.34
        orderQuantity:
          type: integer
          description: the quantity of the Products ordered
        shipQuantity:
          type: integer
          description: the quantity of the Products shipped
        dateCreated:
          type: string
          format: date-time
          description: The creation date of the Product 
        dateUpdated:
          type: string
          format: date-time
          description: The update date of the Product 
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of a specific Customer
          readOnly: true
        name:
          $ref: "#/components/schemas/Name"
        shipToAddress:
          $ref: "#/components/schemas/Address"
        billToAddress:
          $ref: "#/components/schemas/Address"
        email:
          type: string
        phone:
          type: string
        paymentMethods:
          type: array
          items:
            $ref: "#/components/schemas/PaymentMethod"
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of a specific Product
          readOnly: true
        description:
          type: string
          example: |-
            If you think it was just the dandies who wore top hats, you donâ€™t know Dylan or the tough-as-nails dock 
            workers of East London in the late 19th century. Perfect with tails and equally perfect (with some wear 
            and tear) with scuffed-up boots and a canvas trench. Made of 100% wool. Grosgrain band with bow knot 
            detail. For making statements. Imported.
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        price:
          type: number
          format: double
          example: 12.34
        cost:
          type: number
          format: double
          example: 1.23
        dateCreated:
          type: string
          format: date-time
          description: The creation date of the Product 
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          description: The update date of the Product 
          readOnly: true
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the Image
          readOnly: true
        category:
          type: string
          description: A category for the Product
        dateCreated:
          type: string
          format: date-time
          description: The creation date the Category 
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          description: The update date of the Category 
          readOnly: true
    Dimensions:
      type: object
      properties:
        height:
          type: number
          format: float
          example: 3.13
        width:
          type: number
          format: float
          example: 3.13
        length:
          type: number
          format: float
          example: 3.13
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the Image
          readOnly: true
        caption:
          type: string
          description: The caption of the Image
          example: The Top Hat
        alt_text:
          type: string
          description: The accessible alt text of the Image
          example: The Top Hat
        url:
          type: string
          format: url
          example: https://example.com/dam/images/top_hat.webp
        dateCreated:
          type: string
          format: date-time
          description: The creation date of the Image 
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          description: The update date of the Image 
          readOnly: true
    Name:
      type: object
      properties:
        prefix:
          type: string
          description: The honorific of the Customer.
          example: Mr.
          minLength: 0
          maxLength: 25
        firstName:
          type: string
          description: The first name of the Customer.
          example: Timothy
          minLength: 2
          maxLength: 100
        lastName:
          type: string
          description: The last name of the Customer.
          example: Stone
          minLength: 2
          maxLength: 100
        suffix:
          type: string
          description: "The name suffix, e.g., Jr, III, Sr., &c."
          minLength: 0
          maxLength: 25
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of a specific Address
          readOnly: true
        addressLine1:
          type: string
          description: First line of the Address
          example: 123 Main St.
          minLength: 3
          maxLength: 100
        addressLine2:
          type: string
          description: Second line of the Address
          example: Suite 100
          minLength: 3
          maxLength: 100
        city:
          type: string
          description: City
          example: Colonial Beach
          minLength: 3
          maxLength: 100
        state:
          type: string
          description: 2 Charater US State Code
          example: VA
          minLength: 2
          maxLength: 2
        postalCode:
          type: string
          description: the US zip code
          example: "22443"
          minLength: 5
          maxLength: 10
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID of payment method for Customer
          readOnly: true
        displayName:
          type: string
          minLength: 2
          maxLength: 100
        cardNumber:
          type: integer
          minLength: 13 
          maxLength: 19
        expiryMonth:
          type: integer
        expiryYear:
          type: integer
        cvv:
          type: integer
        dateCreated:
          type: string
          format: date-time
          description: the creation date of the Payment Method 
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          description: the update date of the Payment Method 
          readOnly: true
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
